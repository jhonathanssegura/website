[
  {
    "id": 1,
    "title": "Building High-Performance REST APIs with Go and Gin: A Complete Guide",
    "excerpt": "Learn how to build production-ready REST APIs using Go and Gin framework. This comprehensive guide covers architecture patterns, middleware implementation, performance optimization, and deployment strategies for handling 100,000+ requests per second.",
    "cover": "images/rest-golang.jpg",
    "category": "Go",
    "tags": ["golang", "api", "gin", "performance", "microservices", "architecture"],
    "date": "2024-12-20",
    "readTime": 15,
    "views": 2847,
    "comments": 45,
    "featured": true,
    "contentFile": "go-rest-api-guide.md"
  },
  {
    "id": 2,
    "title": "Event-Driven Architecture with Go and Apache Kafka: From Zero to Production",
    "excerpt": "Explore event-driven microservices architecture using Go and Apache Kafka. Learn about event sourcing, CQRS patterns, distributed saga implementation, and building resilient systems that can handle millions of events per second.",
    "cover": "images/kafka-fundamentals.png",
    "category": "Microservices",
    "tags": ["golang", "kafka", "event-sourcing", "cqrs", "microservices", "distributed-systems"],
    "date": "2024-12-15",
    "readTime": 20,
    "views": 1923,
    "comments": 32,
    "featured": true,
    "contentFile": "event-driven-go-kafka.md"
  },
  {
    "id": 3,
    "title": "Advanced Go Concurrency Patterns: Goroutines, Channels, and Beyond",
    "excerpt": "Master Go's concurrency primitives and advanced patterns. Learn about worker pools, fan-out/fan-in patterns, context cancellation, and building high-performance concurrent applications that scale efficiently.",
    "cover": "images/blockchain-golang.png",
    "category": "Go",
    "tags": ["golang", "concurrency", "goroutines", "channels", "patterns", "performance"],
    "date": "2024-12-10",
    "readTime": 18,
    "views": 3156,
    "comments": 67,
    "featured": false,
    "contentFile": "go-concurrency-patterns.md"
  },
  {
    "id": 4,
    "title": "Microservices Best Practices with Go: Lessons from Production",
    "excerpt": "Discover proven patterns and best practices for designing and implementing microservices using Go. Learn about service discovery, circuit breakers, distributed tracing, and building resilient distributed systems.",
    "cover": "images/space-airflow.png",
    "category": "Architecture",
    "tags": ["golang", "microservices", "architecture", "best-practices", "distributed-systems", "production"],
    "date": "2024-12-05",
    "readTime": 25,
    "views": 1892,
    "comments": 28,
    "featured": false,
    "contentFile": "microservices-go-best-practices.md"
  },
  {
    "id": 5,
    "title": "Performance Optimization in Go: Profiling, Benchmarking, and Tuning",
    "excerpt": "Learn advanced techniques for optimizing Go applications. Master profiling tools, memory management, CPU optimization, and performance tuning strategies for building high-performance systems.",
    "cover": "images/black-hole-model.jpg",
    "category": "Performance",
    "tags": ["golang", "performance", "profiling", "optimization", "benchmarking", "memory"],
    "date": "2024-11-30",
    "readTime": 22,
    "views": 2456,
    "comments": 41,
    "featured": false,
    "contentFile": "go-performance-optimization.md"
  },
  {
    "id": 6,
    "title": "Building CLI Tools with Go and Cobra: A Developer's Guide",
    "excerpt": "Create powerful command-line interfaces using Go and the Cobra library. Learn about CLI design patterns, argument parsing, subcommands, and building maintainable command-line applications.",
    "cover": "images/blockchain-python.jpg",
    "category": "Tutorials",
    "tags": ["golang", "cli", "cobra", "tutorial", "command-line", "tools"],
    "date": "2024-11-25",
    "readTime": 12,
    "views": 1678,
    "comments": 19,
    "featured": false,
    "contentFile": "go-cli-cobra-tutorial.md"
  },
  {
    "id": 7,
    "title": "Docker and Kubernetes for Go Applications: Production Deployment Guide",
    "excerpt": "Learn how to containerize Go applications and deploy them to Kubernetes. Cover Docker best practices, multi-stage builds, K8s deployment strategies, and production-ready configurations.",
    "cover": "images/flows-airflow.jpg",
    "category": "DevOps",
    "tags": ["golang", "docker", "kubernetes", "devops", "deployment", "containerization"],
    "date": "2024-11-20",
    "readTime": 18,
    "views": 2234,
    "comments": 35,
    "featured": false,
    "contentFile": "go-docker-kubernetes.md"
  },
  {
    "id": 8,
    "title": "Testing Strategies for Go Applications: Unit, Integration, and E2E Testing",
    "excerpt": "Comprehensive guide to testing Go applications including unit tests, integration tests, test-driven development, mocking strategies, and building reliable test suites for production systems.",
    "cover": "images/rest-django.jpg",
    "category": "Go",
    "tags": ["golang", "testing", "tdd", "unit-tests", "integration-tests", "mocking"],
    "date": "2024-11-15",
    "readTime": 16,
    "views": 1987,
    "comments": 29,
    "featured": false,
    "contentFile": "go-testing-strategies.md"
  },
  {
    "id": 9,
    "title": "Building High-Performance WebSocket Applications with Go",
    "excerpt": "Learn how to build real-time WebSocket applications with Go. Explore connection management, message handling, scaling strategies, and building applications that can handle thousands of concurrent connections.",
    "cover": "images/space-airflow.png",
    "category": "Real-time",
    "tags": ["golang", "websocket", "real-time", "scaling", "performance", "concurrent"],
    "date": "2024-11-10",
    "readTime": 14,
    "views": 1456,
    "comments": 23,
    "featured": false,
    "contentFile": "go-websocket-applications.md"
  },
  {
    "id": 10,
    "title": "Database Design Patterns in Go: From ORM to Raw SQL",
    "excerpt": "Explore database design patterns and best practices in Go. Learn about repository patterns, connection pooling, transaction management, and optimizing database performance for high-traffic applications.",
    "cover": "images/black-hole-model.jpg",
    "category": "Database",
    "tags": ["golang", "database", "orm", "sql", "patterns", "performance"],
    "date": "2024-11-05",
    "readTime": 19,
    "views": 1789,
    "comments": 31,
    "featured": false,
    "contentFile": "go-database-patterns.md"
  },
  {
    "id": 11,
    "title": "Building Distributed Systems with Go: Raft Consensus Implementation",
    "excerpt": "Deep dive into building distributed systems with Go. Learn about consensus algorithms, implementing Raft protocol, leader election, and building fault-tolerant distributed applications.",
    "cover": "images/kafka-fundamentals.png",
    "category": "Distributed Systems",
    "tags": ["golang", "distributed-systems", "raft", "consensus", "fault-tolerance", "algorithms"],
    "date": "2024-10-30",
    "readTime": 28,
    "views": 1234,
    "comments": 18,
    "featured": false,
    "contentFile": "go-distributed-systems-raft.md"
  },
  {
    "id": 12,
    "title": "Security Best Practices for Go Applications: Authentication to Zero Trust",
    "excerpt": "Comprehensive security guide for Go applications. Learn about authentication, authorization, input validation, secure communication, and implementing zero-trust security models.",
    "cover": "images/rest-golang.jpg",
    "category": "Security",
    "tags": ["golang", "security", "authentication", "authorization", "zero-trust", "best-practices"],
    "date": "2024-10-25",
    "readTime": 21,
    "views": 1567,
    "comments": 26,
    "featured": false,
    "contentFile": "go-security-best-practices.md"
  }
] 