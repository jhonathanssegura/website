[
  {
    "id": 1,
    "title": "E-Commerce Microservices Platform",
    "description": "A complete e-commerce platform built with Go microservices, featuring product catalog, order management, payment processing, and inventory tracking. Handles 50,000+ concurrent users with sub-50ms response times.",
    "image": "images/rest-golang.jpg",
    "technologies": ["Go", "Gin", "gRPC", "PostgreSQL", "Redis", "Docker", "Kubernetes", "RabbitMQ"],
    "categories": ["golang", "microservices", "ecommerce", "api"],
    "date": "2024-12-15",
    "stars": 156,
    "forks": 42,
    "featured": true,
    "github": "https://github.com/jhonasegura/ecommerce-platform",
    "live": "https://demo-ecommerce.jhonasegura.dev",
    "features": [
      "Microservices architecture with 12+ services",
      "Event-driven communication with RabbitMQ",
      "JWT authentication with role-based access",
      "Real-time inventory tracking",
      "Payment integration (Stripe, PayPal)",
      "Comprehensive monitoring with Prometheus/Grafana",
      "Auto-scaling with Kubernetes HPA",
      "99.9% uptime SLA achieved"
    ],
    "challenges": "Designed and implemented distributed saga patterns to ensure data consistency across microservices while maintaining high availability. Optimized database queries and implemented caching strategies to handle 50,000+ concurrent users.",
    "learnings": "Deep understanding of distributed systems, event-driven architecture, and building scalable microservices. Mastered Go concurrency patterns and performance optimization techniques."
  },
  {
    "id": 2,
    "title": "Real-Time Trading Platform",
    "description": "High-frequency trading platform built with Go, featuring real-time market data processing, algorithmic trading strategies, and risk management systems. Processes 1M+ market events per second.",
    "image": "images/kafka-fundamentals.png",
    "technologies": ["Go", "Kafka", "WebSocket", "PostgreSQL", "Redis", "Docker", "Kubernetes", "InfluxDB"],
    "categories": ["golang", "fintech", "real-time", "high-performance"],
    "date": "2024-11-20",
    "stars": 89,
    "forks": 23,
    "featured": true,
    "github": "https://github.com/jhonasegura/trading-platform",
    "live": "https://trading-demo.jhonasegura.dev",
    "features": [
      "Real-time market data processing (1M+ events/sec)",
      "WebSocket connections for live data streaming",
      "Algorithmic trading strategy engine",
      "Risk management and position monitoring",
      "High-performance order matching engine",
      "Real-time P&L calculations",
      "Multi-exchange integration",
      "Comprehensive audit trail"
    ],
    "challenges": "Implemented ultra-low latency trading engine with sub-millisecond response times. Designed complex event processing pipeline to handle 1M+ market events per second while maintaining data consistency.",
    "learnings": "Expertise in high-performance Go applications, real-time systems, and financial technology. Deep understanding of low-latency programming and event-driven architectures."
  },
  {
    "id": 3,
    "title": "DevOps Automation Suite",
    "description": "Comprehensive DevOps automation platform built in Go, featuring CI/CD pipeline management, infrastructure as code, and multi-cloud deployment automation.",
    "image": "images/blockchain-golang.png",
    "technologies": ["Go", "Cobra", "Viper", "Docker API", "Kubernetes API", "Terraform", "AWS SDK", "Azure SDK"],
    "categories": ["golang", "devops", "automation", "cloud"],
    "date": "2024-10-10",
    "stars": 234,
    "forks": 67,
    "featured": false,
    "github": "https://github.com/jhonasegura/devops-automation",
    "live": null,
    "features": [
      "Multi-cloud deployment automation (AWS, Azure, GCP)",
      "Infrastructure as Code validation and testing",
      "CI/CD pipeline orchestration",
      "Container orchestration management",
      "Security scanning and compliance checks",
      "Cost optimization recommendations",
      "Plugin architecture for extensibility",
      "Real-time deployment monitoring"
    ],
    "challenges": "Created a plugin system that allows teams to extend functionality without modifying core code. Implemented complex multi-cloud deployment strategies while maintaining security and compliance standards.",
    "learnings": "Advanced Go package design, CLI UX best practices, and building maintainable command-line applications. Deep understanding of cloud infrastructure and DevOps practices."
  },
  {
    "id": 4,
    "title": "Social Media Analytics Engine",
    "description": "Real-time social media analytics platform processing millions of posts daily, providing sentiment analysis, trend detection, and influencer identification.",
    "image": "images/space-airflow.png",
    "technologies": ["Go", "Kafka", "Elasticsearch", "Redis", "PostgreSQL", "Docker", "Kubernetes", "ML"],
    "categories": ["golang", "analytics", "big-data", "ml"],
    "date": "2024-09-15",
    "stars": 127,
    "forks": 34,
    "featured": false,
    "github": "https://github.com/jhonasegura/social-analytics",
    "live": "https://analytics-demo.jhonasegura.dev",
    "features": [
      "Real-time data processing (10M+ posts/day)",
      "Sentiment analysis with ML models",
      "Trend detection algorithms",
      "Influencer identification and scoring",
      "Real-time dashboard with WebSocket updates",
      "Multi-platform integration (Twitter, Instagram, LinkedIn)",
      "Custom alerting and reporting",
      "Scalable data storage with Elasticsearch"
    ],
    "challenges": "Built scalable data processing pipeline to handle 10M+ social media posts daily. Implemented real-time analytics with sub-second latency while maintaining data accuracy and system reliability.",
    "learnings": "Expertise in big data processing, real-time analytics, and machine learning integration. Deep understanding of distributed systems and data pipeline optimization."
  },
  {
    "id": 5,
    "title": "IoT Device Management Platform",
    "description": "Enterprise IoT platform managing 100,000+ connected devices, featuring device provisioning, real-time monitoring, firmware updates, and data analytics.",
    "image": "images/flows-airflow.jpg",
    "technologies": ["Go", "MQTT", "gRPC", "PostgreSQL", "InfluxDB", "Docker", "Kubernetes", "Prometheus"],
    "categories": ["golang", "iot", "real-time", "enterprise"],
    "date": "2024-08-20",
    "stars": 78,
    "forks": 19,
    "featured": false,
    "github": "https://github.com/jhonasegura/iot-platform",
    "live": "https://iot-demo.jhonasegura.dev",
    "features": [
      "Device provisioning and authentication",
      "Real-time device monitoring and control",
      "Over-the-air firmware updates",
      "Data collection and analytics",
      "Alert management and notification system",
      "Multi-protocol support (MQTT, CoAP, HTTP)",
      "Device fleet management",
      "Security and compliance features"
    ],
    "challenges": "Designed scalable architecture to manage 100,000+ IoT devices with real-time communication. Implemented secure device provisioning and over-the-air updates while maintaining system reliability.",
    "learnings": "Deep understanding of IoT protocols, device management, and real-time communication systems. Expertise in building scalable enterprise IoT solutions."
  },
  {
    "id": 6,
    "title": "API Gateway & Service Mesh",
    "description": "High-performance API gateway and service mesh implementation in Go, featuring load balancing, rate limiting, authentication, and observability.",
    "image": "images/black-hole-model.jpg",
    "technologies": ["Go", "gRPC", "HTTP/2", "Redis", "Prometheus", "Jaeger", "Docker", "Kubernetes"],
    "categories": ["golang", "api-gateway", "service-mesh", "networking"],
    "date": "2024-07-10",
    "stars": 203,
    "forks": 45,
    "featured": false,
    "github": "https://github.com/jhonasegura/api-gateway",
    "live": "https://gateway-demo.jhonasegura.dev",
    "features": [
      "High-performance request routing",
      "Load balancing and circuit breaking",
      "Rate limiting and throttling",
      "JWT authentication and authorization",
      "Request/response transformation",
      "Distributed tracing with Jaeger",
      "Metrics collection with Prometheus",
      "Service discovery integration"
    ],
    "challenges": "Built high-performance API gateway handling 100,000+ requests per second with sub-10ms latency. Implemented complex routing rules and transformation logic while maintaining security and observability.",
    "learnings": "Expertise in network programming, API design, and building high-performance proxy servers. Deep understanding of service mesh patterns and microservices communication."
  },
  {
    "id": 7,
    "title": "Machine Learning Model Serving Platform",
    "description": "Scalable ML model serving platform built with Go, featuring model versioning, A/B testing, real-time inference, and model performance monitoring.",
    "image": "images/rest-django.jpg",
    "technologies": ["Go", "TensorFlow Serving", "Redis", "PostgreSQL", "Docker", "Kubernetes", "Prometheus", "MLflow"],
    "categories": ["golang", "machine-learning", "mlops", "ai"],
    "date": "2024-06-15",
    "stars": 145,
    "forks": 38,
    "featured": false,
    "github": "https://github.com/jhonasegura/ml-serving-platform",
    "live": "https://ml-demo.jhonasegura.dev",
    "features": [
      "Model versioning and lifecycle management",
      "A/B testing framework for models",
      "Real-time inference with low latency",
      "Model performance monitoring",
      "Automatic scaling based on demand",
      "Multi-framework support (TensorFlow, PyTorch)",
      "Model drift detection",
      "Batch and real-time inference modes"
    ],
    "challenges": "Built scalable ML model serving platform supporting multiple frameworks and deployment strategies. Implemented A/B testing and model versioning while maintaining high availability and low latency.",
    "learnings": "Deep understanding of MLOps, model serving architectures, and building production-ready ML systems. Expertise in integrating ML models with Go applications."
  },
  {
    "id": 8,
    "title": "Distributed Cache System",
    "description": "High-performance distributed cache system built in Go, featuring consistent hashing, replication, and automatic failover. Handles 1M+ operations per second.",
    "image": "images/blockchain-python.jpg",
    "technologies": ["Go", "Raft", "gRPC", "Redis", "Docker", "Kubernetes", "Prometheus", "Consul"],
    "categories": ["golang", "distributed-systems", "caching", "high-performance"],
    "date": "2024-05-20",
    "stars": 167,
    "forks": 41,
    "featured": false,
    "github": "https://github.com/jhonasegura/distributed-cache",
    "live": null,
    "features": [
      "Distributed caching with consistent hashing",
      "Automatic replication and failover",
      "Raft consensus protocol implementation",
      "High-performance key-value operations",
      "TTL and eviction policies",
      "Cluster health monitoring",
      "Horizontal scaling support",
      "Multi-datacenter replication"
    ],
    "challenges": "Implemented Raft consensus protocol for distributed cache consistency. Built high-performance cache system handling 1M+ operations per second with automatic failover and replication.",
    "learnings": "Expertise in distributed systems, consensus protocols, and building high-performance caching solutions. Deep understanding of Go concurrency and network programming."
  }
] 